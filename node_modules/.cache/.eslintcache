[{"/home/muhammad/Desktop/smartbrain/src/index.js":"1","/home/muhammad/Desktop/smartbrain/src/App.js":"2","/home/muhammad/Desktop/smartbrain/src/reportWebVitals.js":"3","/home/muhammad/Desktop/smartbrain/src/components/Navigation/Navigation.js":"4","/home/muhammad/Desktop/smartbrain/src/components/Logo/Logo.js":"5","/home/muhammad/Desktop/smartbrain/src/components/ImageLinkForm/ImageLinkForm.js":"6","/home/muhammad/Desktop/smartbrain/src/components/Rank/Rank.js":"7","/home/muhammad/Desktop/smartbrain/src/components/ImageRecognition/ImageRecognition.js":"8","/home/muhammad/Desktop/smartbrain/src/components/Signin/Signin.js":"9","/home/muhammad/Desktop/smartbrain/src/components/Register/Register.js":"10"},{"size":520,"mtime":1612853414971,"results":"11","hashOfConfig":"12"},{"size":4349,"mtime":1613676892642,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1612849289613,"results":"14","hashOfConfig":"12"},{"size":717,"mtime":1613676777179,"results":"15","hashOfConfig":"12"},{"size":398,"mtime":1612857604774,"results":"16","hashOfConfig":"12"},{"size":576,"mtime":1613079698390,"results":"17","hashOfConfig":"12"},{"size":235,"mtime":1612861030109,"results":"18","hashOfConfig":"12"},{"size":469,"mtime":1613504697827,"results":"19","hashOfConfig":"12"},{"size":1427,"mtime":1613677148285,"results":"20","hashOfConfig":"12"},{"size":1251,"mtime":1613677170734,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"5yr1au",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/muhammad/Desktop/smartbrain/src/index.js",[],["44","45"],"/home/muhammad/Desktop/smartbrain/src/App.js",["46"],"import React, {Component} from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Clarifai from 'clarifai';\nimport Logo from './components/Logo/Logo';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Rank from './components/Rank/Rank';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Particles from 'react-particles-js';\nimport ImageRecognition from './components/ImageRecognition/ImageRecognition';\n\nconst config = {\n  \"particles\":{\n    \"number\":{\n      \"value\":80,\n      \"density\":{\n        \"enable\":true,\n        \"value_area\":800\n      }\n    }\n  }\n}\n\n\n//You must add your own API key here from Clarifai.\nconst app = new Clarifai.App({\n apiKey: '7ebc9459b3ef4a1da7ee52e6b32c58cb'\n});\n\nclass App extends Component {\n\n  constructor () {\n    super();\n\n    this.state = {\n      input: '',\n      imageUrl : '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n   onInputChange = (event) => {\n    this.setState({input: event.target.value});\n    // console.log(event.target.value)\n  }\n\n  onButtonPress =(event) => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        // HEADS UP! Sometimes the Clarifai Models can be down or not working as they are constantly getting updated.\n        // A good way to check if the model you are using is up, is to check them on the clarifai website. For example,\n        // for the Face Detect Mode: https://www.clarifai.com/models/face-detection\n        // If that isn't working, then that means you will have to wait until their servers are back up. Another solution\n        // is to use a different version of their model that works like: `c0c0ac362b03416da06ab3fa36fb58e3`\n        // so you would change from:\n        // .predict(Clarifai.FACE_DETECT_MODEL, this.state.input)\n        // to:\n        // .predict('c0c0ac362b03416da06ab3fa36fb58e3', this.state.input)\n        Clarifai.FACE_DETECT_MODEL,\n        this.state.input)\n      .then(response => {\n        // console.log('hi', response.outputs[0].data.regions[0].region_info.bounding_box)\n        // if (response) {\n          // fetch('http://localhost:3000/image', {\n          //   method: 'put',\n          //   headers: {'Content-Type': 'application/json'},\n          //   body: JSON.stringify({\n          //     id: this.state.user.id\n          //   })\n          // })\n          //   .then(response => response.json())\n            // .then(count => {\n            //   this.setState(Object.assign(this.state.user, { entries: count}))\n            // })\n\n        // }\n        this.displayFaceBox(this.calculateFaceLocation(response))\n      })\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'home') {\n      this.setState({isSignedIn: true})\n    }else if (route === 'signout') {\n      this.setState({isSignedIn:false})\n    }\n    this.setState({route: route})\n  }\n\n  render () {\n\n    const { isSignedIn, route, input, imageUrl, box } = this.state;\n\n    return (\n    <div className=\"App\">\n      <Particles className=\"particles\" \n        params ={config} />\n      <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n      {\n        route === 'home' ? \n        <div> \n            <Logo />\n            <Rank />\n            <ImageLinkForm onInputChange={this.onInputChange} onButtonPress={this.onButtonPress}/>\n            <ImageRecognition box={box} imageUrl={input}/>     \n        </div>\n        : (\n          route === 'signin' ? \n          <Signin onRouteChange={this.onRouteChange} />\n          : \n          <Register onRouteChange={this.onRouteChange} />\n        )\n      }\n    </div>\n    );\n  }\n}\n\nexport default App;\n","/home/muhammad/Desktop/smartbrain/src/reportWebVitals.js",[],"/home/muhammad/Desktop/smartbrain/src/components/Navigation/Navigation.js",[],"/home/muhammad/Desktop/smartbrain/src/components/Logo/Logo.js",[],"/home/muhammad/Desktop/smartbrain/src/components/ImageLinkForm/ImageLinkForm.js",[],"/home/muhammad/Desktop/smartbrain/src/components/Rank/Rank.js",[],"/home/muhammad/Desktop/smartbrain/src/components/ImageRecognition/ImageRecognition.js",[],"/home/muhammad/Desktop/smartbrain/src/components/Signin/Signin.js",[],"/home/muhammad/Desktop/smartbrain/src/components/Register/Register.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":115,"column":39,"nodeType":"53","messageId":"54","endLine":115,"endColumn":47},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'imageUrl' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]